
When a completion response callback is invoked Sporran will supply a completion 
result JsonObject(result) with the following properties :-

id - Always present, the id of the document.

operation - Always present, the operation performed, one of the defined operation
            constants, e.g 'PUT'
 
localResponse - Always present, true indicates the response was generated offline, 
                false indicates online.
                         
ok - Always present, indicates if true the result of the operation was OK, if false
     it wasn't. If false and localResponse is true no other information is given. If
     localResponse is false(online) the following error properties are set :-
     
     errorCode
     errorText 
     errorReason
     
     indicating the error as reported by CouchDb
     
rev - Always present, indicates the revision of the document post this operation,
      may be null for bulk operations and database info etc and if ok is false or
      we are not online.
      
payload - Always present, the document or attachment body. 
          If ok is false this will be null.
          It will also be null for offline delete operations.
          In the case of an online bulk craete this will contain the bulk insert
          response from CouchDb, if offline it will contain the supplied document list.
          For the database info operation if offline this will contain a list of
          local storage document keys. If online the CouchDb response.
          For get all docs this will contain a list of retrieved documents from
          either local storage or CouchDb.
          
          Note the document body may well contain CouchDb annotations such as 
          _attachments, _rev etc. These can be interrogated if needed using the 
          WiltUserUtils package.


For detailed examples please refer to the test cases in sporran_test.dart.

Note that unlike Wilt the current operation is returned, this allows the client to supply
a single completion function and switch on the oeration type rather than a completion function
per request.